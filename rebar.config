% Common project erlang options.
{erl_opts, [
    debug_info,
    warnings_as_errors,
    no_auto_import,
    warn_obsolete_guard,
    warn_unused_import,
    warn_export_vars,
    bin_opt_info,
    warn_missing_spec_all
]}.

% Common project dependencies.
{deps, [
    {gproc, "0.5.0"}
]}.

{xref_checks, [
    undefined_function_calls,
    undefined_functions,
    locals_not_used,
    deprecated_functions_calls,
    deprecated_functions
]}.

{relx, [
    {release, {mg , "0.1.0"}, [
        mg,
        sasl
    ]},
    {sys_config, "./config/sys.config"},
    {vm_args, "./config/vm.args"},
    {dev_mode, true},
    {include_erts, false},
    {extended_start_script, true}
]}.

{profiles, [
    {prod, [
        {relx, [
            {dev_mode, false},
            {include_erts, true}
        ]}
    ]},
    {test, [
        {deps, []}
    ]}
]}.

{dialyzer, [
    {warnings, [
        % Include warnings for function calls which ignore a structured return value or do not match against one of many possible return value(s).
        unmatched_returns,
        % Include warnings for functions that only return by means of an exception.
        error_handling,
        % Include warnings for possible race conditions. Note that the analysis that finds data races performs intra-procedural data flow analysis and can sometimes explode in time. Enable it at your own risk.
        race_conditions,
        % Warn about underspecified functions (the -spec is strictly more allowing than the success typing).
        underspecs,
        % Let warnings about unknown functions and types affect the exit status of the command line version.
        unknown
    ]}
]}.
